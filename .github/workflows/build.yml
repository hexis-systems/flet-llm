name: build for all targets and upload

on:
  release:
    types: [published]

jobs:

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
      - name: setup python
        id: py310
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: build app
        run: flet pack app.py --name llm-stack --product-name llm-stack --product-version ${{ github.event.release.tag_name }} --copyright "© 2023 hexis systems GmbH. Licensed under the MIT License." --add-binary=/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/llama_cpp/libllama.so:llama_cpp
        # TODO: use "pythonLocation" env var = /opt/hostedtoolcache/Python/3.10.13/x64
      - name: package app
        run: |
          zip -r9 llm-stack-${{ github.event.release.tag_name }}-linux.zip dist/llm-stack
          sha256sum llm-stack-${{ github.event.release.tag_name }}-linux.zip > llm-stack-${{ github.event.release.tag_name }}-linux.sha256
      - name: upload zip
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./llm-stack-${{ github.event.release.tag_name }}-linux.zip
          asset_name: llm-stack-${{ github.event.release.tag_name }}-linux.zip
          asset_content_type: application/zip
      - name: upload sha256
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./llm-stack-${{ github.event.release.tag_name }}-linux.sha256
          asset_name: llm-stack-${{ github.event.release.tag_name }}-linux.sha256
          asset_content_type: text/plain

  build-macos:
    runs-on: macos-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
      - name: setup python
        run: |
          wget https://www.python.org/ftp/python/3.10.9/python-3.10.9-macos11.pkg
          sudo installer -pkg python-3.10.9-macos11.pkg -target /
      - name: install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -r requirements.txt
      - name: build app
        run: flet pack app.py --name llm-stack --product-name llm-stack --product-version ${{ github.event.release.tag_name }} --copyright "© 2023 hexis systems GmbH. Licensed under the MIT License." --add-binary=/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/llama_cpp/libllama.dylib:llama_cpp
        # TODO: use "pythonLocation" env var = /Library/Frameworks/Python.framework/Versions/3.10
      - name: package app
        run: |
          zip -r9 llm-stack-${{ github.event.release.tag_name }}-macos.zip dist/llm-stack.app/
          shasum -a 256 llm-stack-${{ github.event.release.tag_name }}-macos.zip > llm-stack-${{ github.event.release.tag_name }}-macos.sha256
      - name: upload zip
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./llm-stack-${{ github.event.release.tag_name }}-macos.zip
          asset_name: llm-stack-${{ github.event.release.tag_name }}-macos.zip
          asset_content_type: application/zip
      - name: upload sha256
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./llm-stack-${{ github.event.release.tag_name }}-macos.sha256
          asset_name: llm-stack-${{ github.event.release.tag_name }}-macos.sha256
          asset_content_type: text/plain

  build-windows:
    runs-on: windows-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
      - name: setup python
        id: py310
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: build app
        run: flet pack app.py --name llm-stack --product-name llm-stack --product-version ${{ github.event.release.tag_name }} --copyright "\N{COPYRIGHT SIGN} 2023 hexis systems GmbH. Licensed under the MIT License." --add-binary=C:\hostedtoolcache\windows\Python\3.10.11\x64\lib\site-packages\llama_cpp\llama.dll:llama_cpp
        # TODO: use "pythonLocation" env var = C:\hostedtoolcache\windows\Python\3.10.11\x64
      - name: package app
        run: |
          tar acvf llm-stack-${{ github.event.release.tag_name }}-windows.zip dist\llm-stack.exe
          certutil -hashfile llm-stack-${{ github.event.release.tag_name }}-windows.zip SHA256 > llm-stack-${{ github.event.release.tag_name }}-windows.sha256
      - name: upload zip
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./llm-stack-${{ github.event.release.tag_name }}-windows.zip
          asset_name: llm-stack-${{ github.event.release.tag_name }}-windows.zip
          asset_content_type: application/zip
      - name: upload sha256
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./llm-stack-${{ github.event.release.tag_name }}-windows.sha256
          asset_name: llm-stack-${{ github.event.release.tag_name }}-windows.sha256
          asset_content_type: text/plain